{"version":3,"sources":["../src/python.ts"],"sourcesContent":["import pythonBridge, {\n  type PythonBridge,\n  type PythonBridgeOptions\n} from '@fisch0920/python-bridge'\n\nexport type { PythonBridge }\n\n/**\n * The version of the python `scikit-learn` module this package was built with.\n *\n * Other versions may work, but there may be minor differences in the generated\n * types. We recommend against using other major versions.\n */\nexport const SCIKIT_LEARN_VERSION = '1.2.1'\n\nconst PB = pythonBridge as any\nconst [scikitLearnVersionMajor, scikitLearnVersionMinor] =\n  SCIKIT_LEARN_VERSION.split('.').map((x) => parseInt(x))\n\nexport async function createPythonBridge(\n  opts: PythonBridgeOptions = {}\n): Promise<PythonBridge> {\n  const py = PB({\n    python: 'python3',\n    stdio: ['pipe', 'pipe', 'pipe'],\n    ...opts\n  })\n  await validatePythonBridge(py)\n  return py\n}\n\n// TODO: validate `numpy and `sklearn`\nexport async function validatePythonBridge(py: PythonBridge): Promise<void> {\n  await py.ex`\nfrom platform import python_version\n`\n\n  const pyVersion: string = await py`python_version()`\n  const [pyMajor, pyMinor] = pyVersion.split('.').map((x) => parseInt(x))\n  if (!pyMajor) {\n    throw new Error(`Invalid python version \"${pyVersion}\"`)\n  }\n\n  if (pyMajor < 3) {\n    throw new Error(\n      `Unsupported python version \"${pyVersion}\"; please upgrade to python 3.7 or newer`\n    )\n  }\n\n  if (pyMajor === 3) {\n    if (pyMinor < 7) {\n      throw new Error(\n        `Unsupported python version \"${pyVersion}\"; please upgrade to python 3.7 or newer`\n      )\n    }\n  }\n\n  await py.ex`\nfrom sklearn import __version__\n`\n\n  const sklearnVersion: string = await py`__version__`\n  const [sklearnMajor, sklearnMinor] = sklearnVersion\n    .split('.')\n    .map((x) => parseInt(x))\n\n  if (!sklearnMajor) {\n    throw new Error(\n      `Invalid python scikit-learn module version \"${sklearnVersion}\"`\n    )\n  }\n\n  if (sklearnMajor < scikitLearnVersionMajor) {\n    throw new Error(\n      `Unsupported python scikit-learn module version \"${sklearnVersion}\"; please upgrade`\n    )\n  }\n\n  if (sklearnMajor === scikitLearnVersionMajor) {\n    if (sklearnMinor < scikitLearnVersionMinor) {\n      throw new Error(\n        `Unsupported python scikit-learn module version \"${sklearnVersion}\"; please upgrade`\n      )\n    } else if (sklearnMinor > scikitLearnVersionMinor) {\n      console.warn(\n        `Warning: python scikit-learn module version \"${sklearnVersion}\" is MINOR upgrade from ${SCIKIT_LEARN_VERSION} and is untested with the current version of this library`\n      )\n    }\n  } else if (sklearnMajor > scikitLearnVersionMajor) {\n    console.warn(\n      `Warning: python scikit-learn module version \"${sklearnVersion}\" is a MAJOR upgrade from \"${SCIKIT_LEARN_VERSION}\" and is untested with the current version of this library`\n    )\n  }\n}\n"],"mappings":";AAAA,OAAO,kBAGA;AAUA,IAAM,uBAAuB;AAEpC,IAAM,KAAK;AACX,IAAM,CAAC,yBAAyB,uBAAuB,IACrD,qBAAqB,MAAM,GAAG,EAAE,IAAI,CAAC,MAAM,SAAS,CAAC,CAAC;AAExD,eAAsB,mBACpB,OAA4B,CAAC,GACN;AACvB,QAAM,KAAK,GAAG;AAAA,IACZ,QAAQ;AAAA,IACR,OAAO,CAAC,QAAQ,QAAQ,MAAM;AAAA,IAC9B,GAAG;AAAA,EACL,CAAC;AACD,QAAM,qBAAqB,EAAE;AAC7B,SAAO;AACT;AAGA,eAAsB,qBAAqB,IAAiC;AAC1E,QAAM,GAAG;AAAA;AAAA;AAIT,QAAM,YAAoB,MAAM;AAChC,QAAM,CAAC,SAAS,OAAO,IAAI,UAAU,MAAM,GAAG,EAAE,IAAI,CAAC,MAAM,SAAS,CAAC,CAAC;AACtE,MAAI,CAAC,SAAS;AACZ,UAAM,IAAI,MAAM,2BAA2B,YAAY;AAAA,EACzD;AAEA,MAAI,UAAU,GAAG;AACf,UAAM,IAAI;AAAA,MACR,+BAA+B;AAAA,IACjC;AAAA,EACF;AAEA,MAAI,YAAY,GAAG;AACjB,QAAI,UAAU,GAAG;AACf,YAAM,IAAI;AAAA,QACR,+BAA+B;AAAA,MACjC;AAAA,IACF;AAAA,EACF;AAEA,QAAM,GAAG;AAAA;AAAA;AAIT,QAAM,iBAAyB,MAAM;AACrC,QAAM,CAAC,cAAc,YAAY,IAAI,eAClC,MAAM,GAAG,EACT,IAAI,CAAC,MAAM,SAAS,CAAC,CAAC;AAEzB,MAAI,CAAC,cAAc;AACjB,UAAM,IAAI;AAAA,MACR,+CAA+C;AAAA,IACjD;AAAA,EACF;AAEA,MAAI,eAAe,yBAAyB;AAC1C,UAAM,IAAI;AAAA,MACR,mDAAmD;AAAA,IACrD;AAAA,EACF;AAEA,MAAI,iBAAiB,yBAAyB;AAC5C,QAAI,eAAe,yBAAyB;AAC1C,YAAM,IAAI;AAAA,QACR,mDAAmD;AAAA,MACrD;AAAA,IACF,WAAW,eAAe,yBAAyB;AACjD,cAAQ;AAAA,QACN,gDAAgD,yCAAyC;AAAA,MAC3F;AAAA,IACF;AAAA,EACF,WAAW,eAAe,yBAAyB;AACjD,YAAQ;AAAA,MACN,gDAAgD,4CAA4C;AAAA,IAC9F;AAAA,EACF;AACF;","names":[]}