import { PythonBridge } from '@/sklearn/types';
/**
  Grid of parameters with a discrete number of values for each.

  Can be used to iterate over parameter value combinations with the Python built-in function iter. The order of the generated parameter combinations is deterministic.

  Read more in the [User Guide](../grid_search.html#grid-search).

  [Python Reference](https://scikit-learn.org/stable/modules/generated/sklearn.model_selection.ParameterGrid.html)
 */
export declare class ParameterGrid {
    id: string;
    opts: any;
    _py: PythonBridge;
    _isInitialized: boolean;
    _isDisposed: boolean;
    constructor(opts?: {
        /**
          The parameter grid to explore, as a dictionary mapping estimator parameters to sequences of allowed values.
    
          An empty dict signifies default parameters.
    
          A sequence of dicts signifies a sequence of grids to search, and is useful to avoid exploring parameter combinations that make no sense or have no effect. See the examples below.
         */
        param_grid?: any;
    });
    get py(): PythonBridge;
    set py(pythonBridge: PythonBridge);
    /**
      Initializes the underlying Python resources.
  
      This instance is not usable until the `Promise` returned by `init()` resolves.
     */
    init(py: PythonBridge): Promise<void>;
    /**
      Disposes of the underlying Python resources.
  
      Once `dispose()` is called, the instance is no longer usable.
     */
    dispose(): Promise<void>;
}
//# sourceMappingURL=ParameterGrid.d.ts.map